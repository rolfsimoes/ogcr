openapi: 3.0.3
info:
  title: OGCR API
  description: OpenAPI specification for the OGCR API.
  version: 0.1.0
servers:
  - url: https://api.ogcr.org/v1
    description: Production server
  - url: https://api-sandbox.carbon-registry.org/v1
    description: Sandbox server
security:
  - OAuth2: []
paths:
  /health:
    get:
      summary: Health check
      operationId: getHealth
      security: []
      responses:
        '200':
          description: API health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /projects:
    get:
      summary: List projects
      operationId: listProjects
      security:
        - OAuth2: [projects:read]
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, submitted, under_review, approved, rejected, archived]
          description: Filter projects by status
        - name: project_type
          in: query
          schema:
            type: string
            enum: [afforestation, reforestation, soil_carbon, biochar, direct_air_capture, enhanced_weathering, blue_carbon, biomass_energy_ccs]
          description: Filter projects by type
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum number of projects to return
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Offset for pagination
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
    post:
      summary: Create a new project
      operationId: createProject
      security:
        - OAuth2: [projects:write]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
            example:
              type: Feature
              ogcr_version: '0.1.0'
              profile: pdd
              geometry:
                type: Polygon
                coordinates: [[[0,0],[1,0],[1,1],[0,1],[0,0]]]
              properties:
                name: Sample Project
                project_type: afforestation
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
  /projects/{projectId}:
    get:
      summary: Retrieve a project by ID
      operationId: getProject
      security:
        - OAuth2: [projects:read]
      parameters:
        - name: projectId
          in: path
          required: true
          description: ID of the project to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
    put:
      summary: Update a project
      operationId: updateProject
      security:
        - OAuth2: [projects:write]
      parameters:
        - name: projectId
          in: path
          required: true
          description: ID of the project to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Updated project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
  /webhooks:
    post:
      summary: Register a webhook
      operationId: createWebhook
      security:
        - OAuth2: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfig'
            example:
              url: https://your-app.com/webhooks/carbon-registry
              events:
                - project.approved
                - credit.issued
              secret: your-webhook-secret
      responses:
        '201':
          description: Webhook registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.ogcr.org/oauth/authorize
          tokenUrl: https://api.ogcr.org/oauth/token
          scopes:
            projects:read: Read access to project data
            projects:write: Create and update project data
            projects:approve: Approve projects
    ApiKeyAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Project:
      type: object
      required:
        - type
        - ogcr_version
        - profile
        - geometry
        - properties
      properties:
        type:
          type: string
          enum: [Feature]
        id:
          type: string
        ogcr_version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
        profile:
          type: string
          enum: [pdd]
        geometry:
          type: object
          description: GeoJSON geometry object
        bbox:
          type: array
          items:
            type: number
          minItems: 4
          maxItems: 4
        properties:
          $ref: '#/components/schemas/ProjectProperties'
        ledger_reference:
          $ref: '#/components/schemas/LedgerReference'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ProjectProperties:
      type: object
      required:
        - name
        - creation_date
        - project_type
        - status
        - actor_id
      properties:
        name:
          type: string
        description:
          type: string
        creation_date:
          type: string
          format: date-time
        last_updated:
          type: string
          format: date-time
        project_type:
          type: string
          enum: [afforestation, reforestation, soil_carbon, biochar, direct_air_capture, enhanced_weathering, blue_carbon, biomass_energy_ccs]
        status:
          type: string
          enum: [draft, submitted, under_review, approved, rejected, archived]
        actor_id:
          type: string
        methodology:
          $ref: '#/components/schemas/MethodologyReference'
        baseline_scenario:
          type: string
        expected_annual_benefit:
          type: number
          minimum: 0
    MethodologyReference:
      type: object
      required:
        - id
        - version
      properties:
        id:
          type: string
        version:
          type: string
        name:
          type: string
        type:
          type: string
    LedgerReference:
      type: object
      required:
        - transaction_id
        - block_number
        - timestamp
      properties:
        transaction_id:
          type: string
        block_number:
          type: integer
        timestamp:
          type: string
          format: date-time
        ledger_id:
          type: string
    Link:
      type: object
      required:
        - rel
        - href
      properties:
        rel:
          type: string
        href:
          type: string
          format: uri
        type:
          type: string
        title:
          type: string
    PaginationResponse:
      type: object
      required:
        - total
        - limit
        - offset
        - has_more
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        has_more:
          type: boolean
    ProjectListResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        pagination:
          $ref: '#/components/schemas/PaginationResponse'
    WebhookConfig:
      type: object
      required:
        - url
        - events
      properties:
        url:
          type: string
          format: uri
        events:
          type: array
          items:
            type: string
        secret:
          type: string
    Webhook:
      allOf:
        - $ref: '#/components/schemas/WebhookConfig'
        - type: object
          properties:
            id:
              type: string
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
  responses:
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
