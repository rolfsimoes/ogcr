@startuml
!theme plain
title OGCR System Architecture - Reference Component View

!define RECTANGLE class

package "Application Layer" {
    [Web Portal] <<application>>
    [Mobile Interface] <<application>>
    [External Integrations] <<application>>
}

package "API Layer" {
    [OGCR API Server] <<api>>
    [Authentication and Access Control] <<api>>
    [Document Validation Engine] <<api>>
    [Lifecycle Manager] <<api>>
    [External Service Connectors] <<api>>
}

package "Ledger Layer" {
    [Smart Contract Interface] <<ledger>>
    [Blockchain Network] <<ledger>>
    [Immutable Document Store] <<ledger>>
}

' Application interactions
[Web Portal] --> [OGCR API Server] : REST/HTTPS
[Mobile Interface] --> [OGCR API Server] : REST/HTTPS
[External Integrations] --> [OGCR API Server] : REST/HTTPS

' API logic
[OGCR API Server] --> [Authentication and Access Control]
[OGCR API Server] --> [Document Validation Engine]
[OGCR API Server] --> [Lifecycle Manager]
[OGCR API Server] --> [External Service Connectors]

' Ledger integration
[Lifecycle Manager] --> [Smart Contract Interface] : Anchor Hashes
[Smart Contract Interface] --> [Blockchain Network] : Submit TX
[Immutable Document Store] --> [Blockchain Network] : Optional Linkage

' External systems
[External Service Connectors] --> [Verification Providers]
[External Service Connectors] --> [Monitoring Data Sources]
[External Service Connectors] --> [Carbon Market Platforms]

note top of [OGCR API Server]
  - Handles all registry operations
  - Enforces lifecycle rules
  - Performs canonical hashing
end note

note top of [Smart Contract Interface]
  - Verifies PDD/MRV hashes
  - Issues/Retires CRUs
  - Emits lifecycle events
end note

note bottom of [Blockchain Network]
  - Public or permissioned ledger
  - Traceable, immutable events
end note

skinparam component {
    BackgroundColor<<application>> LightBlue
    BackgroundColor<<api>> LightGreen
    BackgroundColor<<ledger>> LightYellow
}

@enduml
